########
# Copyright (c) 2017 MSO4SC - javier.carnero@atos.net
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

tosca_definitions_version: cloudify_dsl_1_3

imports:
    # to speed things up, it is possible downloading this file,
    - http://www.getcloudify.org/spec/cloudify/4.0.1/types.yaml
    # relative import of plugin.yaml that resides in the blueprint directory
    - hpc_plugin/test_plugin.yaml

inputs:
    # example input that could be injected by test
    ft2_credentials:
        description: Path to ft2 credentials file

################################################################################################
node_types:
    hpc.nodes.cesga:
        derived_from: hpc.nodes.Compute
        properties:
            credentials: 
                default: { get_input: ft2_credentials }
            workload_manager:
                default: 'SLURM'
################################################################################################

node_templates:
    hpc_node:
        # using base cloudify type
        type: hpc.nodes.cesga
    
    first_job:
        type: hpc.nodes.job
        properties:
            job_config: "{'command': 'touch.script cfy1.test', 'type': 'SBATCH'}"
        relationships:
            - type: job_contained_in_hpc
              target: hpc_node

    second_parallel_job:
        type: hpc.nodes.job
        properties:
            job_config: "{'command': 'touch cfy2.test', 'type': 'SRUN', 'max_time': '00:01'}"
        relationships:
            - type: job_contained_in_hpc
              target: hpc_node
            - type: job_depends_on
              target: first_job
    
    third_parallel_job:
        type: hpc.nodes.job
        properties:
            job_config: "{'command': 'touch cfy3.test', 'type': 'SRUN', 'max_time': '00:01'}"
        relationships:
            - type: job_contained_in_hpc
              target: hpc_node
            - type: job_depends_on
              target: first_job

    fourth_job:
        type: hpc.nodes.job
        properties:
            job_config: "{'command': 'touch.script cfy4.test', 'type': 'SBATCH'}"
        relationships:
            - type: job_contained_in_hpc
              target: hpc_node
            - type: job_depends_on
              target: second_parallel_job
            - type: job_depends_on
              target: third_parallel_job


outputs:
    # example output the could be used to simplify assertions by test
    job_name:
        description: an output for the test
        value: { get_attribute: [first_job, job_name] }
