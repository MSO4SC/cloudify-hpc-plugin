########
# Copyright (c) 2017 MSO4SC - javier.carnero@atos.net
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

tosca_definitions_version: cloudify_dsl_1_3

imports:
    # to speed things up, it is possible downloading this file,
    # - http://www.getcloudify.org/spec/cloudify/4.0.1/types.yaml
    - http://raw.githubusercontent.com/mso4sc/cloudify-hpc-plugin/master/resources/types/cfy_types.yaml
    # relative import of plugin.yaml that resides in the blueprint directory
    - hpc_plugin/test_plugin.yaml

inputs:
    # Monitor
    monitor_entrypoint:
        description: Monitor entrypoint IP
        default: ""
        type: string

    # Job prefix name
    job_prefix:
        description: Job name prefix in HPCs
        default: "cfyhpc"
        type: string

    partition:
        description: Partition in which the jobs will run
        default: "public"
        type: string

    # First HPC configuration
    mso4sc_hpc_primary:
        description: Configuration for the primary HPC to be used
        default: {}

    mso4sc_datacatalogue_entrypoint:
        description: entrypoint of the data catalogue
        default: "http://193.144.35.207"

    mso4sc_datacatalogue_key:
        description: API Key to publish the outputs
        default: ""

    mso4sc_outdataset_outputs_at:
        description: ID of the CKAN output dataset
        default: ""

node_templates:
    first_hpc:
        type: hpc.nodes.Compute
        properties:
            config: { get_input: mso4sc_hpc_primary }
            external_monitor_entrypoint: { get_input: monitor_entrypoint }
            job_prefix: { get_input: job_prefix }
            workdir_prefix: "single_singularity"
            skip_cleanup: True
            simulate: True  # COMMENT to test against a real HPC

    single_job:
        type: hpc.nodes.singularity_job
        properties:
            job_options: 
                modules:
                    - gcc/5.3.0
                    - openmpi/1.10.2
                    - singularity/2.3.1
                partition: { get_input: partition }
                image: '$LUSTRE/openmpi_1.10.7_ring.img'
                home: '$HOME:/home/$USER'
                volumes:
                    - '/scratch'
                command: 'ring > single.test'
                nodes: 1
                tasks: 1
                tasks_per_node: 1
                max_time: '00:01:00'
                scale: 2
            deployment:
                bootstrap: 'scripts/singularity_bootstrap_example.sh'
                #revert: 'scripts/singularity_revert_example.sh'
                inputs:
                    - '$LUSTRE'
                    - 'openmpi_1.10.7_ring.img'
            skip_cleanup: True
        relationships:
            - type: job_contained_in_hpc
              target: first_hpc

outputs:
    single_job_name:
        description: single job name in the HPC
        value: { get_attribute: [single_job, job_name] }
